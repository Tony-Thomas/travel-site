.site-header {
	position: absolute;
	z-index: 2; /*-by default when two HTML elements are positioned in a way that will overlap, the element that comes later in the html doc will be the lop layer. Z-index overrides this.-*/
	width: 100%;
	padding: 10px 0;
	transition: background-color .3s ease-out;

	&--is-expanded {
		background-color: rgba($mainBlue, .55);
	}

	@mixin atMedium {
		background-color: rgba($mainBlue, .3);
	}

	&__btn-container {
		@mixin atMedium {
			float: right;
		}
	}

	&__logo {
		position: absolute;
		background-color: $mainBlue;
		padding: 25px 36px;
		top: 0;
		left: 50%; /*-position logo 50% to the left-*/
		transform: translateX(-50%) scale(.8); /*-pulls logo back to the right 50% of its own width-*/
		transform-origin: 50% 0%; /*- 50% 50% would be perfect middle both vertically and horizonally. setting vertical to 0% removes the space above the logo-*/

		@mixin atMedium { /*-reposition logo on desktop screens-*/
			left: auto;
			transform: translateX(0); /*-Defines a translation, using only the value for the X-axis -- The transform property applies a 2D or 3D transformation to an element. This property allows you to rotate, scale, move, skew, etc., elements.-*/
		}
	}

	&__menu-icon {
		width: 20px;
		height: 19px;
		
		position: absolute; /*-position: static|absolute|fixed|relative|initial|inherit; specifies the type of positioning method used for an element (static, relative, absolute or fixed).-*/
		z-index: 10; /*-puts button on top layer so nothing else can overlap it.-*/
		top: 10px;
		right: 10px;

		&::before {  /*- was &__top - sudo element we can use for the top bar-*/
			content:""; /*-The content property is used with the :before and :after pseudo-elements, to insert generated content.-*/
			position: absolute;
			top: 0;
			left: 0;
			width: 20px;
			height: 3px;
			background-color: #fff;
			transform-origin: 0 0;/*-Top left corner origin is 0 0. The transform-origin property allows you to change the position of transformed elements. By default browsers are set to 50% horizontal 50% vertical.-*/
			transition: transform .3s ease-out; /*-gradually transform/transition into x shape, 300 milliseconds, ease-out style-*/
		}

		&__middle {
			position: absolute; 
			top: 8px; /*-8px lower than top bar-*/
			left: 0;
			width: 20px;
			height: 3px;
			background-color: #fff;
			transition: all .3s ease-out; /*-gradually dissapear middle bar over 300 milliseconds, chnaged transition from just opacity propety to "all" properties-*/
			transform-origin: 0 50%; /*-without this setting the transform origin woulf be "center", instead of shrinking in from both the left and right, this sets it to shrink in from only the right treating the left side at the pivot point-*/
		}

		&::after {
			content: "";
			position: absolute;
			bottom: 0px; /*-could also set this to 1px instead of setting menu-icon height to 19px -*/
			left: 0;
			width: 20px; /*-The width property does not include padding, borders, or margins; it sets the width of the area inside the padding, border, and margin of the element!-*/
			height: 3px; /*-The height property does not include padding, borders, or margins; it sets the height of the area inside the padding, border, and margin of the element!-*/
			background-color: #fff; /*-The background-color property sets the background color of an element. The background of an element is the total size of the element, including padding and border (but not the margin).-*/
			transform-origin: 0 100%; /*- 0 to point to left corner and 100% to point to point ot vertical bottom-*/
			transition: transform .3s ease-out; /*-same settings as top bar-*/
		}

		@mixin atMedium {
			display: none; /*- The element will not be displayed at all (has no effect on layout)-*/
		}
	}

	&__menu-icon--close-x { /*-hamburger menu click animation-*/
	  &::before {
	    transform: rotate(45deg) scaleX(1.25); /*-scaleX setting lengthens the bar bar 25%-*/
	  }

	  .site-header__menu-icon__middle {
	  	opacity: 0; /*-hide middle bar when when hanburder menu is clicked-*/
	  	transition: scaleX(0); /*-transition from full width down to zero width-*/
	  }

	  &::after {
	  	transform: rotate(-45deg) scaleX(1.25) translateY(1px); /*-scaleX = counter clockwise, translateY = vertical positioning 1px lower-*/
	  }
	}

	&__menu-content {
		opacity: 0; /*-replaced display: none;-*/
		transform: scale(1.2); /*-20% larger than default size-*/
		padding-top: 80px; /*-changed from 100px to better center menu content.-*/
		text-align: center; /*-The text-align property specifies the horizontal alignment of text in an element. text-align: left|right|center|justify|initial|inherit;-*/
		transition: all .3s, ease-out; /*-allows you to change property values smoothly (from one value to another), over a given duration.-*/
		position: relative; /*-the brwoser wont acknowledge z-index without this property-*/
		z-index: -10; /*-The z-index property specifies the stack order of an element. An element with greater stack order is always in front of an element with a lower stack order.-*/

		@mixin atMedium {
			opacity: 1; /*-replaced display: block;-*/
			z-index: 1; /* desktop default-*/
			padding-top: 0;
			transform: scale(1); /*-desktop default-*/
		}

		&--is-visible {
			display: block; /*-The display property specifies the type of box used for an HTML element.-*/
			opacity: 1; /*-The opacity-level describes the transparency-level, where 1 is not transparent at all, 0.5 is 50% see-through, and 0 is completely transparent.-*/
			z-index: 1;
			transform: scale(1); /*-return to default size-*/
		}
	}

}